class TimeVisibilityGenerator extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.elements={},this.eventHandlers=new Map,this.initialized=!1,this.config={rules:[this._createDefaultRule()]}}async connectedCallback(){this.initialized||(await this.init(),this.initialized=!0)}disconnectedCallback(){this.destroy()}async init(){await this.render(),this.findElements(),this.bindEvents(),this.setInitialState()}async render(){const e=this.getTemplate(),t=this.getStyles();this.shadowRoot.innerHTML=`\n      <style>${t}</style>\n      ${e}\n    `}get HIDING_CLASS(){return"js-time-hidden"}get WEEKDAYS_ORDER(){return["sunday","monday","tuesday","wednesday","thursday","friday","saturday"]}get DEFAULT_RULE_STATE(){return{blockClasses:"",startTime:"00:00:00",endTime:"23:59:59",timezone:"auto",weekdays:{monday:!1,tuesday:!1,wednesday:!1,thursday:!1,friday:!1,saturday:!1,sunday:!1},hideAfterDate:!1,hideDate:"",hideTime:"23:59:59"}}get STYLE_TAG_ID(){return"taptop-time-visibility-styles"}_createDefaultRule(){const e=structuredClone(this.DEFAULT_RULE_STATE);return{id:this._generateRuleId(),...e}}_generateRuleId(){return`rule_${Date.now().toString(36)}_${Math.random().toString(36).substring(2,7)}`}getStyles(){return":host{box-sizing:border-box;display:block;font-family:Inter,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Arial,sans-serif;max-width:100%;width:100%}*{box-sizing:border-box}.time-visibility-generator{--primary-color:#4483f5;--primary-hover:#3a70d1;--primary-light:rgba(68,131,245,.15);--primary-gradient:linear-gradient(90deg,#4483f5,#5e6ffd);--text-dark:#333;--text-light:#777;--border-color:#ddd;--bg-light:#f8f9fa;--shadow-sm:0 2px 5px rgba(0,0,0,.05);--shadow-md:0 4px 12px rgba(0,0,0,.08);--radius-sm:6px;--radius-md:10px;--radius-lg:12px;--transition:all 0.2s ease;--error-color:#dc3545;background:linear-gradient(180deg,#f8f9fa,#f0f3f7);border:1px solid rgba(0,0,0,.05);border-radius:var(--radius-md);box-shadow:var(--shadow-md);color:var(--text-dark);min-width:350px;padding:15px;width:100%}.form-grid{display:flex;flex-direction:column;gap:15px;margin-bottom:20px;max-height:calc(100vh - 348px);min-height:0;overflow:auto}.rule-card{animation:fadeIn .3s ease-out;background:#fff;border:1px solid var(--border-color);border-radius:var(--radius-md);box-shadow:var(--shadow-sm);margin-bottom:15px;overflow:hidden;transition:var(--transition)}.rule-header{background:#f8fafc;border-bottom:1px solid var(--border-color);justify-content:space-between;padding:15px 20px}.rule-header,.rule-title{align-items:center;display:flex}.rule-title{color:var(--text-dark);font-weight:600}.rule-badge{align-items:center;background:var(--primary-gradient);border-radius:6px;box-shadow:0 2px 4px rgba(68,131,245,.2);color:#fff;display:inline-flex;font-size:14px;font-weight:600;height:24px;justify-content:center;margin-left:8px;width:24px}.rule-body{padding:20px}fieldset{border:none;margin:0;padding:0}.settings-section{margin-bottom:20px}.settings-section-title{border-bottom:1px solid var(--border-color);color:var(--text-dark);font-size:15px;font-weight:600;margin-bottom:15px;padding-bottom:8px}.settings-row{gap:15px}.setting-group,.settings-row{display:flex;flex-direction:column}.setting-group{gap:8px;width:100%}.setting-group label{color:var(--text-dark);font-size:14px;font-weight:500}.select-styled,.text-input{background:#fff;border:1px solid var(--border-color);border-radius:var(--radius-sm);box-shadow:var(--shadow-sm);color:var(--text-dark);font-size:14px;padding:8px 10px;transition:var(--transition);width:100%}.select-styled:focus,.text-input:focus{border-color:var(--primary-color);box-shadow:0 0 0 3px var(--primary-light);outline:none}.select-styled{appearance:none;background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3E%3Cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3E%3C/svg%3E\");background-position:right 8px center;background-repeat:no-repeat;background-size:16px;cursor:pointer;padding-right:32px}.helper-text{color:var(--text-light);font-size:13px;line-height:1.4;margin:0}.weekday-container{display:flex;flex-wrap:wrap;gap:10px;margin-bottom:15px;margin-top:15px}.weekday-item{flex:0 0 auto}.weekday-checkbox{opacity:0;position:absolute}.weekday-label{align-items:center;background:#f1f5f9;border-radius:20px;cursor:pointer;display:flex;padding:8px 12px;transition:var(--transition);user-select:none}.weekday-label:hover{background:#e2e8f0}.weekday-checkbox:checked+.weekday-label{background:var(--primary-color);color:#fff}.checkbox-container{align-items:center;cursor:pointer;display:flex;gap:10px;margin:0}.checkbox-container input[type=checkbox]{cursor:pointer;flex-shrink:0;height:18px;margin:0;width:18px}.checkbox-option-label{color:var(--text-dark);cursor:pointer;font-size:14px;line-height:1.4}.hide-date-section{background-color:hsla(0,0%,100%,.7);border-radius:var(--radius-sm);margin-top:15px}.hide-date-row{gap:15px}.hide-date-field,.hide-date-row{display:flex;flex-direction:column}.hide-date-field{gap:8px;width:100%}.hide-date-field label{font-size:14px}.add-rule-button{align-items:center;background-color:rgba(68,131,245,.08);border:2px dashed rgba(68,131,245,.3);border-radius:var(--radius-md);color:var(--primary-color);cursor:pointer;display:flex;font-size:15px;font-weight:500;justify-content:center;margin-bottom:20px;padding:15px;transition:var(--transition);width:100%}.add-rule-button:hover{background-color:rgba(68,131,245,.12);border-color:rgba(68,131,245,.5);transform:translateY(-2px)}.add-rule-button svg{margin-right:8px}.remove-rule-button{align-items:center;background:rgba(0,0,0,.05);border:none;border-radius:50%;color:var(--text-light);cursor:pointer;display:flex;height:30px;justify-content:center;transition:var(--transition);width:30px}.remove-rule-button:hover{background-color:var(--error-color);color:#fff;transform:scale(1.1)}.action-section{display:flex;justify-content:center;margin-top:20px}.generate-button{align-items:center;background:var(--primary-gradient);border:none;border-radius:var(--radius-sm);box-shadow:0 4px 12px rgba(68,131,245,.3);color:#fff;cursor:pointer;display:flex;font-size:16px;font-weight:500;gap:8px;padding:12px 24px;transition:var(--transition)}.generate-button:hover{box-shadow:0 6px 16px rgba(68,131,245,.4);transform:translateY(-2px)}.generate-button:active{box-shadow:0 2px 8px rgba(68,131,245,.3);transform:translateY(0)}@keyframes fadeIn{0%{opacity:0;transform:translateY(10px)}to{opacity:1;transform:translateY(0)}}"}getTemplate(){return'<form class="time-visibility-generator"><div class="form-grid"><div id="rules-container"></div><button type="button" id="add-rule-button" class="add-rule-button"><svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12 5V19M5 12H19" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>Добавить новое правило</button></div><div class="action-section"><button type="button" class="generate-button" id="generate-btn"><svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M16 18l6-6-6-6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/><path d="M8 6l-6 6 6 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg><span>Сгенерировать код</span></button></div></form>'}getRuleTemplate(){return'\n      <div class="rule-card" data-rule-id="">\n        <div class="rule-header">\n          <div class="rule-title">Правило <span class="rule-badge rule-number">1</span></div>\n          <button type="button" class="remove-rule-button" aria-label="Удалить правило">\n            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n              <path d="M18 6L6 18M6 6l12 12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n            </svg>\n          </button>\n        </div>\n        <div class="rule-body">\n          <div class="settings-section">\n            <div class="settings-section-title">Настройка блоков</div>\n            <div class="settings-row">\n              <div class="setting-group">\n                <label for="block-classes-template">CSS классы блоков:</label>\n                <input type="text" class="text-input block-classes" placeholder="promo-banner, sale-popup">\n                <div class="helper-text">Укажите классы блоков через запятую (без точки)</div>\n              </div>\n            </div>\n          </div>\n          \n          <div class="settings-section">\n            <div class="settings-section-title">Время показа</div>\n            <div class="settings-row">\n              <div class="setting-group">\n                <label>Время начала показа:</label>\n                <input type="time" step="1" class="text-input start-time" value="00:00:00">\n              </div>\n              <div class="setting-group">\n                <label>Время окончания показа:</label>\n                <input type="time" step="1" class="text-input end-time" value="23:59:59">\n              </div>\n              <div class="setting-group">\n                <label>Часовой пояс:</label>\n                <select class="select-styled timezone-select">\n                  <option value="auto" selected>Автоматически (часовой пояс посетителя)</option>\n                  <optgroup label="Россия и ближнее зарубежье">\n                    <option value="2">UTC+2 (Калининград)</option>\n                    <option value="3">UTC+3 (Москва)</option>\n                    <option value="4">UTC+4 (Самара)</option>\n                    <option value="5">UTC+5 (Екатеринбург)</option>\n                    <option value="6">UTC+6 (Омск)</option>\n                    <option value="7">UTC+7 (Красноярск)</option>\n                    <option value="8">UTC+8 (Иркутск)</option>\n                    <option value="9">UTC+9 (Якутск)</option>\n                    <option value="10">UTC+10 (Владивосток)</option>\n                    <option value="11">UTC+11 (Магадан)</option>\n                    <option value="12">UTC+12 (Камчатка)</option>\n                  </optgroup>\n                  <optgroup label="Западное полушарие">\n                    <option value="-12">UTC-12 (Линия перемены даты)</option>\n                    <option value="-11">UTC-11 (о. Мидуэй)</option>\n                    <option value="-10">UTC-10 (Гавайи)</option>\n                    <option value="-9">UTC-9 (Аляска)</option>\n                    <option value="-8">UTC-8 (Тихоокеанское время)</option>\n                    <option value="-7">UTC-7 (Горное время)</option>\n                    <option value="-6">UTC-6 (Центральное время)</option>\n                    <option value="-5">UTC-5 (Восточное время)</option>\n                    <option value="-4">UTC-4 (Атлантическое время)</option>\n                    <option value="-3">UTC-3 (Буэнос-Айрес)</option>\n                    <option value="-2">UTC-2 (Среднеатлантическое время)</option>\n                    <option value="-1">UTC-1 (Азорские о-ва)</option>\n                  </optgroup>\n                  <optgroup label="Центральный регион">\n                    <option value="0">UTC+0 (Лондон)</option>\n                    <option value="1">UTC+1 (Берлин, Париж)</option>\n                  </optgroup>\n                  <optgroup label="Азия и Океания">\n                    <option value="4">UTC+4 (Дубай)</option>\n                    <option value="5.5">UTC+5:30 (Индия)</option>\n                    <option value="8">UTC+8 (Китай, Сингапур)</option>\n                    <option value="9">UTC+9 (Япония, Корея)</option>\n                    <option value="9.5">UTC+9:30 (Центр. Австралия)</option>\n                    <option value="10">UTC+10 (Вост. Австралия)</option>\n                    <option value="12">UTC+12 (Новая Зеландия)</option>\n                    <option value="13">UTC+13 (Самоа)</option>\n                  </optgroup>\n                </select>\n              </div>\n            </div>\n          </div>\n          \n          <div class="settings-section">\n            <div class="settings-section-title">Дни недели</div>\n            <div class="weekday-container">\n              <div class="weekday-item">\n                <input type="checkbox" class="weekday-checkbox monday-checkbox">\n                <label class="weekday-label">Пн</label>\n              </div>\n              <div class="weekday-item">\n                <input type="checkbox" class="weekday-checkbox tuesday-checkbox">\n                <label class="weekday-label">Вт</label>\n              </div>\n              <div class="weekday-item">\n                <input type="checkbox" class="weekday-checkbox wednesday-checkbox">\n                <label class="weekday-label">Ср</label>\n              </div>\n              <div class="weekday-item">\n                <input type="checkbox" class="weekday-checkbox thursday-checkbox">\n                <label class="weekday-label">Чт</label>\n              </div>\n              <div class="weekday-item">\n                <input type="checkbox" class="weekday-checkbox friday-checkbox">\n                <label class="weekday-label">Пт</label>\n              </div>\n              <div class="weekday-item">\n                <input type="checkbox" class="weekday-checkbox saturday-checkbox">\n                <label class="weekday-label">Сб</label>\n              </div>\n              <div class="weekday-item">\n                <input type="checkbox" class="weekday-checkbox sunday-checkbox">\n                <label class="weekday-label">Вс</label>\n              </div>\n            </div>\n            <div class="helper-text">Если не выбран ни один день, блок будет показываться ежедневно</div>\n          </div>\n          \n          <div class="settings-row" style="margin-top: 20px;">\n            <div class="setting-group">\n              <label class="checkbox-container">\n                <input type="checkbox" class="hide-after-date hide-after-date-toggle">\n                <span class="checkbox-option-label">Скрыть блок после определенной даты и времени <strong>(навсегда)</strong></span>\n              </label>\n            </div>\n          </div>\n          \n          <div class="hide-date-section" style="display: none;">\n            <div class="hide-date-row">\n              <div class="hide-date-field">\n                <label>Дата скрытия:</label>\n                <input type="date" class="text-input hide-date">\n                <div class="helper-text">После наступления указанной даты и времени блок будет скрыт навсегда.</div>\n              </div>\n              <div class="hide-date-field">\n                <label>Время скрытия:</label>\n                <input type="time" step="1" class="text-input hide-time" value="23:59:59">\n                <div class="helper-text">Точное время скрытия блока</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    '}findElements(){this.elements.rulesContainer=this.shadowRoot.getElementById("rules-container"),this.elements.addRuleButton=this.shadowRoot.getElementById("add-rule-button"),this.elements.generateButton=this.shadowRoot.getElementById("generate-btn"),this.elements.successPopup=document.querySelector(".pop-up-success"),this.elements.popupAcceptBtn=document.querySelector("[data-popup-accept-btn]"),this.elements.popupCloseBtn=document.querySelector("[data-popup-close-btn]")}bindEvents(){if(this.elements.addRuleButton){const e=()=>this.addNewRule();this.eventHandlers.set("add-rule",e),this.elements.addRuleButton.addEventListener("click",e)}if(this.elements.generateButton){const e=()=>this.generateAndCopyCode();this.eventHandlers.set("generate",e),this.elements.generateButton.addEventListener("click",e)}if(this.elements.rulesContainer){const e=e=>this._handleRuleChange(e),t=e=>this._handleRuleChange(e),n=e=>this._handleRuleRemoveClick(e);this.eventHandlers.set("rules-input",e),this.eventHandlers.set("rules-change",t),this.eventHandlers.set("rules-click",n),this.elements.rulesContainer.addEventListener("input",e),this.elements.rulesContainer.addEventListener("change",t),this.elements.rulesContainer.addEventListener("click",n)}this.bindModalEvents()}bindModalEvents(){if(this.elements.popupAcceptBtn){const e=()=>this.hideSuccessPopup();this.eventHandlers.set("popup-accept",e),this.elements.popupAcceptBtn.addEventListener("click",e)}if(this.elements.popupCloseBtn){const e=()=>this.hideSuccessPopup();this.eventHandlers.set("popup-close",e),this.elements.popupCloseBtn.addEventListener("click",e)}if(this.elements.successPopup){const e=e=>{e.target===this.elements.successPopup&&this.hideSuccessPopup()};this.eventHandlers.set("popup-overlay",e),this.elements.successPopup.addEventListener("click",e)}}unbindEvents(){this.elements.addRuleButton&&this.eventHandlers.has("add-rule")&&this.elements.addRuleButton.removeEventListener("click",this.eventHandlers.get("add-rule")),this.elements.generateButton&&this.eventHandlers.has("generate")&&this.elements.generateButton.removeEventListener("click",this.eventHandlers.get("generate")),this.elements.rulesContainer&&(this.eventHandlers.has("rules-input")&&this.elements.rulesContainer.removeEventListener("input",this.eventHandlers.get("rules-input")),this.eventHandlers.has("rules-change")&&this.elements.rulesContainer.removeEventListener("change",this.eventHandlers.get("rules-change")),this.eventHandlers.has("rules-click")&&this.elements.rulesContainer.removeEventListener("click",this.eventHandlers.get("rules-click"))),this.elements.popupAcceptBtn&&this.eventHandlers.has("popup-accept")&&this.elements.popupAcceptBtn.removeEventListener("click",this.eventHandlers.get("popup-accept")),this.elements.popupCloseBtn&&this.eventHandlers.has("popup-close")&&this.elements.popupCloseBtn.removeEventListener("click",this.eventHandlers.get("popup-close")),this.elements.successPopup&&this.eventHandlers.has("popup-overlay")&&this.elements.successPopup.removeEventListener("click",this.eventHandlers.get("popup-overlay")),this.eventHandlers.clear()}setInitialState(){this.renderRules()}_handleRuleRemoveClick(e){const t=e.target.closest(".remove-rule-button");if(!t)return;const n=t.closest(".rule-card[data-rule-id]"),i=n?.dataset.ruleId;i&&(e.preventDefault(),this.removeRule(i))}_handleRuleChange(e){const t=e.target,n=t.closest(".rule-card[data-rule-id]"),i=n?.dataset.ruleId;if(!i)return;const s=this.config.rules.find(e=>e.id===i);if(!s)return;const r=t.name||t.dataset.name;if(!r)return;const o="checkbox"===t.type?t.checked:t.value;switch(r){case"block-classes":s.blockClasses=o;break;case"start-time":s.startTime=o;break;case"end-time":s.endTime=o;break;case"timezone":s.timezone=o;break;case"hide-after-date-toggle":s.hideAfterDate=o,this._toggleHideDateSection(n,o);break;case"hide-date":s.hideDate=o;break;case"hide-time":s.hideTime=o;break;default:const e=r.match(/^weekday-(monday|tuesday|wednesday|thursday|friday|saturday|sunday)$/);if(e){const t=e[1];s.weekdays.hasOwnProperty(t)&&(s.weekdays[t]=o)}}}_toggleHideDateSection(e,t){const n=e.querySelector(".hide-date-section");n&&(n.style.display=t?"":"none")}addNewRule(){const e=this._createDefaultRule();this.config.rules.push(e),this.renderRule(e),this._updateRemoveButtonsVisibility();const t=this.shadowRoot.getElementById(`rule-${e.id}`);t&&requestAnimationFrame(()=>{t.scrollIntoView({behavior:"smooth",block:"nearest"})})}removeRule(e){this.config.rules=this.config.rules.filter(t=>t.id!==e);const t=this.shadowRoot.getElementById(`rule-${e}`);t&&t.remove(),0===this.config.rules.length?this.addNewRule():(this._updateRuleNumbers(),this._updateRemoveButtonsVisibility())}_updateRuleNumbers(){this.elements.rulesContainer.querySelectorAll(".rule-card[data-rule-id]").forEach((e,t)=>{const n=e.querySelector(".rule-number");n&&(n.textContent=t+1)})}_updateRemoveButtonsVisibility(){const e=this.elements.rulesContainer.querySelectorAll(".rule-card[data-rule-id]"),t=e.length>1;e.forEach(e=>{const n=e.querySelector(".remove-rule-button");n&&(n.style.display=t?"":"none")})}renderRules(){this.elements.rulesContainer&&(this.elements.rulesContainer.innerHTML="",this.config.rules.forEach(e=>this.renderRule(e)),this._updateRemoveButtonsVisibility())}renderRule(e){if(!this.elements.rulesContainer)return;const t=this.getRuleTemplate(),n=document.createElement("div");n.innerHTML=t;const i=n.querySelector(".rule-card");if(!i)return;i.id=`rule-${e.id}`,i.dataset.ruleId=e.id;const s=i.querySelector(".rule-number"),r=i.querySelector(".block-classes"),o=i.querySelector(".start-time"),a=i.querySelector(".end-time"),l=i.querySelector(".timezone-select"),d=i.querySelector(".weekday-container"),c=i.querySelector(".hide-after-date-toggle"),u=i.querySelector(".hide-date"),p=i.querySelector(".hide-time");s&&(s.textContent=this.config.rules.indexOf(e)+1),r&&(r.value=e.blockClasses,r.name="block-classes"),o&&(o.value=e.startTime,o.name="start-time"),a&&(a.value=e.endTime,a.name="end-time"),l&&(l.value=e.timezone,l.name="timezone"),d&&this.WEEKDAYS_ORDER.forEach(t=>{const n=d.querySelector(`.${t}-checkbox`);if(n){const i=`${t}-${e.id}`;n.id=i,n.checked=!!e.weekdays[t],n.name=`weekday-${t}`;const s=n.nextElementSibling;s&&s.setAttribute("for",i)}}),c&&(c.checked=e.hideAfterDate,c.name="hide-after-date-toggle"),this._toggleHideDateSection(i,e.hideAfterDate),u&&(u.value=e.hideDate,u.name="hide-date"),p&&(p.value=e.hideTime||"23:59:59",p.name="hide-time"),this.elements.rulesContainer.appendChild(i)}collectData(){return{rules:structuredClone(this.config.rules)}}generateCode(e={}){if(!e.rules||0===e.rules.length)return"\x3c!-- Time Visibility: Правила не настроены. --\x3e";const t=e.rules.map(e=>{const t=e.blockClasses?.split(",").map(e=>e.trim()).filter(Boolean)??[];if(0===t.length)return null;const n=this.WEEKDAYS_ORDER.reduce((t,n,i)=>(e.weekdays[n]&&t.push(i),t),[]),i=n.length>0?n:[0,1,2,3,4,5,6];let s=null;return e.hideAfterDate&&e.hideDate&&/^\d{4}-\d{2}-\d{2}$/.test(e.hideDate)?s=e.hideDate:e.hideAfterDate&&e.hideDate&&console.warn(`[Time Visibility] Неверный формат даты скрытия "${e.hideDate}" для правила с классами "${t.join(", ")}". Скрытие по дате игнорируется.`),{blockClasses:t,startTime:e.startTime||"00:00:00",endTime:e.endTime||"23:59:59",timezone:e.timezone||"auto",weekdays:i,hideAfterDate:!!e.hideAfterDate,hideDate:s,hideTime:e.hideTime||"23:59:59"}}).filter(Boolean);if(0===t.length)return"\x3c!-- Time Visibility: Не найдено валидных правил (проверьте CSS классы блоков). --\x3e";const n=JSON.stringify(t,null,2),i=this.HIDING_CLASS,s=this.STYLE_TAG_ID;return`\x3c!-- Taptop Extension: Time Visibility --\x3e\n<script>\ndocument.addEventListener('DOMContentLoaded', function() {\n\n  // Функция для автоматического добавления CSS правила в <head>\n  (function() {\n    if (document.getElementById('${s}')) return; // Не добавлять, если уже есть\n    const cssRule = \`.${i} { display: none !important; }\`;\n    const styleElement = document.createElement('style');\n    styleElement.id = '${s}';\n    styleElement.textContent = cssRule;\n    try {\n      document.head.appendChild(styleElement);\n    } catch (e) { // Fallback для старых браузеров или edge cases\n      console.error('[TimeVisibility] Не удалось добавить стили в <head>, пробую в <body>', e);\n      try { document.body.appendChild(styleElement); } catch (e2) {\n        console.error('[TimeVisibility] Не удалось добавить стили и в <body>', e2);\n      }\n    }\n  })();\n\n  // Контроллер видимости блоков\n  const timeVisibilityController = {\n    rules: ${n},\n    hidingClass: '${i}',\n    timeoutId: null,\n\n    /** Получает текущее время в нужном часовом поясе */\n    getCurrentTimeInZone: function(tzSetting) {\n        const now = new Date();\n        let targetOffsetHours = -now.getTimezoneOffset() / 60;\n        if (tzSetting !== 'auto') {\n            const specifiedOffset = parseFloat(tzSetting);\n            if (!isNaN(specifiedOffset)) targetOffsetHours = specifiedOffset;\n        }\n        const utcMillis = now.getTime() + (now.getTimezoneOffset() * 60000);\n        return new Date(utcMillis + (targetOffsetHours * 3600000));\n    },\n\n    /** Проверяет, должен ли блок быть видимым по правилу */\n    checkRuleVisibility: function(rule, currentTime) {\n        try {\n            // 1. Проверка скрытия по дате\n            if (rule.hideAfterDate && rule.hideDate) {\n                const [hYear, hMonth, hDay] = rule.hideDate.split('-').map(Number);\n                const [hHour, hMin, hSec] = rule.hideTime.split(':').map(Number);\n                const hideTargetUTC = Date.UTC(hYear, hMonth - 1, hDay, hHour, hMin, hSec);\n                // Сравниваем с текущим временем в UTC\n                const currentUTC = currentTime.getTime() - (currentTime.getTimezoneOffset() * 60000);\n                if (currentUTC >= hideTargetUTC) return false; // Скрыть навсегда\n            }\n\n            // 2. Проверка дня недели\n            const currentDayOfWeek = currentTime.getDay(); // 0=Вс, 1=Пн..\n            if (!rule.weekdays.includes(currentDayOfWeek)) return false;\n\n            // 3. Проверка времени\n            const [startH, startM, startS] = rule.startTime.split(':').map(Number);\n            const [endH, endM, endS] = rule.endTime.split(':').map(Number);\n            const startMillis = (startH * 3600 + startM * 60 + startS) * 1000;\n            const endMillis = (endH * 3600 + endM * 60 + endS) * 1000;\n            const currentMillis = (currentTime.getHours() * 3600 + currentTime.getMinutes() * 60 + currentTime.getSeconds()) * 1000;\n\n            // Проверка интервала (включая пересечение полуночи)\n            if (startMillis <= endMillis) { // Обычный интервал (09:00-18:00)\n                return currentMillis >= startMillis && currentMillis <= endMillis;\n            } else { // Интервал через полночь (22:00-06:00)\n                return currentMillis >= startMillis || currentMillis <= endMillis;\n            }\n        } catch (e) {\n            console.error('[TimeVisibility] Ошибка при проверке правила:', rule, e);\n            return false; // Скрываем в случае ошибки\n        }\n    },\n\n    /** Применяет правила ко всем блокам и планирует следующую проверку */\n    applyAllRulesAndScheduleNextCheck: function() {\n        if (this.timeoutId) clearTimeout(this.timeoutId);\n        this.timeoutId = null;\n        let nextCheckDelay = Infinity;\n\n        this.rules.forEach(rule => {\n            const selectors = rule.blockClasses.map(cls => \`.\${cls}\`).join(', ');\n            if (!selectors) return;\n            const blocks = document.querySelectorAll(selectors);\n            if (blocks.length === 0) return;\n\n            const currentTime = this.getCurrentTimeInZone(rule.timezone);\n            const shouldShow = this.checkRuleVisibility(rule, currentTime);\n\n            // Управляем классом видимости\n            blocks.forEach(block => {\n                block.classList.toggle(this.hidingClass, !shouldShow);\n            });\n\n            // Рассчитываем задержку до следующей проверки для этого правила\n            const ruleDelay = this.calculateNextCheckDelayForRule(rule, currentTime);\n            nextCheckDelay = Math.min(nextCheckDelay, ruleDelay);\n        });\n\n        // Устанавливаем таймер для следующей проверки\n        if (nextCheckDelay === Infinity || nextCheckDelay <= 0) nextCheckDelay = 60000; // Fallback\n        const maxDelay = 86400000; // Не ждем дольше суток\n        const finalDelay = Math.min(nextCheckDelay, maxDelay);\n\n        this.timeoutId = setTimeout(() => {\n            this.applyAllRulesAndScheduleNextCheck();\n        }, finalDelay);\n    },\n\n    /** Рассчитывает задержку до следующего важного события для правила */\n    calculateNextCheckDelayForRule: function(rule, currentTime) {\n         let minDelay = Infinity;\n         const nowMillis = currentTime.getTime();\n         try {\n            const momentsToCheck = []; // Массив временных меток (мс) для проверки\n\n            // Время начала сегодня/завтра\n            const [startH, startM, startS] = rule.startTime.split(':').map(Number);\n            const startTimeToday = new Date(currentTime); startTimeToday.setHours(startH, startM, startS, 0);\n            momentsToCheck.push(startTimeToday.getTime()); momentsToCheck.push(startTimeToday.getTime() + 86400000);\n\n            // Время окончания сегодня/завтра\n            const [endH, endM, endS] = rule.endTime.split(':').map(Number);\n            const endTimeToday = new Date(currentTime); endTimeToday.setHours(endH, endM, endS, 999);\n            momentsToCheck.push(endTimeToday.getTime()); momentsToCheck.push(endTimeToday.getTime() + 86400000);\n\n            // Время скрытия по дате (если актуально)\n            if (rule.hideAfterDate && rule.hideDate) {\n                 const [hYear, hMonth, hDay] = rule.hideDate.split('-').map(Number);\n                 const [hHour, hMin, hSec] = rule.hideTime.split(':').map(Number);\n                 const hideTargetUTC = Date.UTC(hYear, hMonth - 1, hDay, hHour, hMin, hSec);\n                 const currentUTC = currentTime.getTime() - (currentTime.getTimezoneOffset() * 60000);\n                 if (hideTargetUTC > currentUTC) { // Если дата еще не наступила\n                    // Приближенный расчет локального времени скрытия\n                    const targetOffsetHours = (rule.timezone === 'auto') ? - (new Date()).getTimezoneOffset() / 60 : parseFloat(rule.timezone);\n                    const hideTargetLocalMillis = hideTargetUTC + (targetOffsetHours * 3600000);\n                    if (hideTargetLocalMillis > nowMillis) { // Убедимся, что оно в будущем\n                       momentsToCheck.push(hideTargetLocalMillis);\n                    }\n                 }\n            }\n\n            // Следующая полночь\n            const nextMidnight = new Date(currentTime); nextMidnight.setHours(24, 0, 0, 0);\n            momentsToCheck.push(nextMidnight.getTime());\n\n            // Находим минимальную задержку до будущего момента\n            momentsToCheck.forEach(momentMillis => {\n                if (momentMillis > nowMillis) minDelay = Math.min(minDelay, momentMillis - nowMillis);\n            });\n\n        } catch(e) {\n            console.error("[TimeVisibility] Ошибка при расчете задержки:", rule, e);\n            return 60000; // Fallback 1 минута\n        }\n        // Возвращаем задержку > 1 сек\n        return Math.max(1000, (minDelay === Infinity ? 60000 : minDelay) + 100); // +100ms буфер\n     },\n\n    /** Инициализация контроллера */\n    init: function() {\n      if (!this.rules || this.rules.length === 0) return; // Нет правил - нет работы\n      this.applyAllRulesAndScheduleNextCheck(); // Запуск цикла\n    }\n  };\n\n  // Запускаем контроллер\n  timeVisibilityController.init();\n});\n<\/script>\n\x3c!-- End Taptop Extension: Time Visibility --\x3e`}async generateAndCopyCode(){try{const e=this.collectData();if(!e)return;const t=this.generateCode(e),n=await this.minifyGeneratedCode(t);await this.copyToClipboard(n),this.showSuccessPopup()}catch(e){console.error("Ошибка генерации кода:",e)}}async minifyGeneratedCode(e){try{const t=this.parseGeneratedCode(e),n=t.css?this.minifyCSS(t.css):"",i=t.js?this.minifyJS(t.js):"",s=t.html?this.minifyHTML(t.html):"";let r="";return n&&(r+=`<style>${n}</style>`),i&&(r+=`<script>${i}<\/script>`),s&&(r+=s),r}catch(t){return console.warn("Минификация генерируемого кода не удалась, используем оригинал:",t),e}}parseGeneratedCode(e){const t={css:"",js:"",html:""},n=/<style[^>]*>([\s\S]*?)<\/style>/gi;let i;for(;null!==(i=n.exec(e));)t.css+=i[1];const s=/<script[^>]*>([\s\S]*?)<\/script>/gi;for(;null!==(i=s.exec(e));)t.js+=i[1];return t.html=e.replace(/<style[^>]*>[\s\S]*?<\/style>/gi,"").replace(/<script[^>]*>[\s\S]*?<\/script>/gi,"").trim(),t}minifyCSS(e){return e.replace(/\/\*[\s\S]*?\*\//g,"").replace(/\s+/g," ").replace(/\s*([{}:;,>+~])\s*/g,"$1").replace(/;}/g,"}").replace(/\s*\(\s*/g,"(").replace(/\s*\)\s*/g,")").replace(/#([a-f0-9])\1([a-f0-9])\2([a-f0-9])\3/gi,"#$1$2$3").trim()}minifyHTML(e){return e?e.replace(/<!--[\s\S]*?-->/g,"").replace(/>\s+</g,"><").replace(/\s+/g," ").trim():""}minifyJS(e){let t=e;return t=this.removeJSComments(t),t=t.replace(/const\s+([a-zA-Z_$][a-zA-Z0-9_$]*)\s*=\s*/g,"const $1=").replace(/let\s+([a-zA-Z_$][a-zA-Z0-9_$]*)\s*=\s*/g,"let $1=").replace(/var\s+([a-zA-Z_$][a-zA-Z0-9_$]*)\s*=\s*/g,"var $1="),t=t.replace(/{\s*([^}]+)\s*}/g,(e,t)=>`{${t.replace(/\s*:\s*/g,":").replace(/\s*,\s*/g,",")}}`).replace(/\[\s*([^\]]+)\s*\]/g,(e,t)=>`[${t.replace(/\s*,\s*/g,",")}]`),t=t.replace(/\s*([=+\-*/%<>&|!])\s*/g,"$1").replace(/\s*([(){}[\];,])\s*/g,"$1").replace(/\s+/g," ").replace(/\b(if|for|while|switch|catch|function|return|throw|new|typeof)\s+/g,"$1 ").replace(/\belse\s+/g,"else ").replace(/\s*\n\s*/g,"\n").replace(/\n+/g,"\n").trim(),t=t.replace(/\btrue\b(?=\s*[,;\}\)\]])/g,"!0").replace(/\bfalse\b(?=\s*[,;\}\)\]])/g,"!1").replace(/\bundefined\b(?=\s*[,;\}\)\]])/g,"void 0"),t}removeJSComments(e){let t="",n=!1,i="",s=!1,r=!1;for(let o=0;o<e.length;o++){const a=e[o],l=e[o+1]||"";if(!s&&!r){if(!(n||'"'!==a&&"'"!==a&&"`"!==a)){n=!0,i=a,t+=a;continue}if(n&&a===i&&"\\"!==e[o-1]){n=!1,t+=a;continue}if(n){t+=a;continue}}if(!n){if(!s&&!r&&"/"===a&&"*"===l){s=!0,o++;continue}if(s&&"*"===a&&"/"===l){s=!1,o++;continue}if(!s&&!r&&"/"===a&&"/"===l){r=!0,o++;continue}if(r&&("\n"===a||"\r"===a)){r=!1,t+=a;continue}}s||r||(t+=a)}return t}async copyToClipboard(e){if(navigator.clipboard)try{return void await navigator.clipboard.writeText(e)}catch(e){console.log("Ошибка clipboard API:",e)}const t=document.createElement("textarea");t.value=e,t.style.position="fixed",t.style.opacity="0",t.style.left="-9999px",document.body.appendChild(t);try{t.select(),document.execCommand("copy")}finally{document.body.removeChild(t)}}showSuccessPopup(){this.elements.successPopup&&(this.elements.successPopup.style.display="flex")}hideSuccessPopup(){this.elements.successPopup&&(this.elements.successPopup.style.display="none")}destroy(){this.unbindEvents(),this.initialized=!1,console.log("TimeVisibilityGenerator: Генератор уничтожен")}}customElements.define("time-visibility-generator",TimeVisibilityGenerator);