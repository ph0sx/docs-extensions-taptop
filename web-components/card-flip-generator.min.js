class CardFlipGenerator extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.elements={},this.eventHandlers=new Map,this.initialized=!1,this.previewFlipCard=null,this.previewTriggerElement=null,this._previewUpdateControls=[]}async connectedCallback(){this.initialized||(await this.init(),this.initialized=!0)}disconnectedCallback(){this.destroy()}async init(){await this.render(),this.findElements(),this.bindEvents(),this.setInitialState()}async render(){const e=this.getTemplate(),n=this.getStyles();this.shadowRoot.innerHTML=`\n      <style>${n}</style>\n      ${e}\n    `}getStyles(){return":host{box-sizing:border-box;display:block;font-family:Inter,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Arial,sans-serif;max-width:100%;width:100%}*{box-sizing:border-box}.card-flip-generator{--primary-color:#4483f5;--primary-light:rgba(68,131,245,.15);--primary-gradient:linear-gradient(90deg,#4483f5,#5e6ffd);--text-dark:#333;--text-medium:#555;--text-light:#777;--border-color:#ddd;--bg-light:#f8f9fa;--shadow-sm:0 2px 5px rgba(0,0,0,.05);--shadow-md:0 4px 12px rgba(0,0,0,.08);--radius-sm:6px;--radius-md:10px;--transition:all 0.2s ease;background:linear-gradient(180deg,#f8f9fa,#f0f3f7);border:1px solid rgba(0,0,0,.05);border-radius:var(--radius-md);box-shadow:var(--shadow-md);color:var(--text-dark);min-width:350px;padding:15px;width:100%}.form-grid{background:#fff;border-radius:var(--radius-md);box-shadow:var(--shadow-sm);display:flex;flex-direction:column;gap:15px;margin-bottom:20px;max-height:calc(100vh - 348px);min-height:0;overflow:auto;padding:15px;width:100%}.form-grid::-webkit-scrollbar{width:6px}.form-grid::-webkit-scrollbar-track{background:#f1f1f1;border-radius:3px}.form-grid::-webkit-scrollbar-thumb{background:#c1c1c1;border-radius:3px}.form-grid::-webkit-scrollbar-thumb:hover{background:#a8a8a8}.setting-group,.settings-column{display:flex;flex-direction:column;gap:15px}.setting-group label{align-items:center;color:var(--text-dark);display:flex;font-size:14px;font-weight:500}.number-input,.select-styled,.text-input{background:#fff;border:1px solid var(--border-color);border-radius:var(--radius-sm);box-shadow:var(--shadow-sm);box-sizing:border-box;color:var(--text-dark);font-size:14px;max-width:100%;min-width:0;padding:8px 10px;transition:var(--transition);width:100%}.number-input:focus,.select-styled:focus,.text-input:focus{border-color:var(--primary-color);box-shadow:0 0 0 3px var(--primary-light);outline:none}.radio-group{display:flex;flex-direction:column;gap:15px}.radio-container{align-items:center;color:var(--text-dark);cursor:pointer;display:inline-flex;font-size:14px;margin-bottom:5px;padding-left:30px;position:relative;user-select:none}.radio-container input[type=radio]{cursor:pointer;height:0;opacity:0;position:absolute;width:0}.radio-checkmark{background-color:#f0f0f0;border:1px solid #ccc;border-radius:50%;box-shadow:inset 0 1px 2px rgba(0,0,0,.1);height:20px;left:0;position:absolute;transition:all .2s ease;width:20px}.radio-container:hover input[type=radio]~.radio-checkmark{background-color:#e0e0e0;border-color:#bbb}.radio-container input[type=radio]:checked~.radio-checkmark{background-color:var(--primary-color);border-color:var(--primary-color);box-shadow:none}.radio-checkmark:after{content:\"\";display:none;position:absolute}.radio-container input[type=radio]:checked~.radio-checkmark:after{display:block}.radio-container .radio-checkmark:after{background:#fff;border-radius:50%;height:8px;left:5px;top:5px;width:8px}.slider-container{display:flex;flex-direction:column;gap:5px}.slider{-webkit-appearance:none;background:var(--border-color);border-radius:3px;height:6px;outline:none;width:100%}.slider::-webkit-slider-thumb{-webkit-appearance:none;appearance:none;background:var(--primary-color);border-radius:50%;box-shadow:0 2px 6px rgba(0,0,0,.2);cursor:pointer;height:20px;width:20px}.slider::-moz-range-thumb{background:var(--primary-color);border:none;border-radius:50%;box-shadow:0 2px 6px rgba(0,0,0,.2);cursor:pointer;height:20px;width:20px}.slider-labels{color:var(--text-light);display:flex;font-size:12px;justify-content:space-between}.slider-value{margin-top:5px;text-align:center}.slider-value-primary{color:var(--primary-color);font-size:14px;font-weight:500}.helper-text,p.helper-text{color:var(--text-light);font-size:13px;line-height:1.4;margin:-5px 0 0}.helper-text:not(:last-child),p.helper-text:not(:last-child){margin-bottom:15px}.helper-text code{background:var(--bg-light);border-radius:3px;font-size:11px;padding:2px 4px}.required-indicator{color:#e74c3c}fieldset{border:none;margin:0;padding:0}legend{border-bottom:2px solid var(--bg-light);color:var(--text-dark);font-size:16px;font-weight:600;margin-bottom:15px;padding-bottom:8px;width:100%}.select-styled{appearance:none;background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3E%3Cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3E%3C/svg%3E\");background-position:right 8px center;background-repeat:no-repeat;background-size:16px;cursor:pointer;padding-right:32px}.preview-section{border-top:1px solid var(--border-color);margin-top:20px;padding-top:20px}.preview-title{color:var(--primary-color);font-size:16px;font-weight:600;margin-bottom:15px;text-align:center}.preview-area{align-items:center;background-color:#f8f9fa;border:1px dashed var(--border-color);border-radius:var(--radius-md);box-shadow:var(--shadow-sm) inset;display:flex;justify-content:center;margin:0 auto 10px;max-width:350px;min-height:250px;overflow:hidden;perspective:1000px;position:relative;width:100%}.preview-area flip-card{border-radius:var(--radius-sm);box-shadow:var(--shadow-md);color:#fff;font-size:16px;font-weight:700;height:200px;width:80%}.preview-area flip-card [slot=back],.preview-area flip-card [slot=front]{align-items:center;border-radius:inherit;box-sizing:border-box;display:flex;justify-content:center;padding:15px;text-align:center}.preview-area flip-card [slot=front]{background:linear-gradient(135deg,var(--primary-color) 0,#6a11cb 100%)}.preview-area flip-card [slot=back]{background:linear-gradient(135deg,#f857a6,#ff5858)}.preview-placeholder{color:var(--text-light);font-size:14px;font-style:italic;padding:20px;text-align:center}.preview-error{background-color:var(--error-light);border:1px solid rgba(229,57,53,.3);border-radius:var(--radius-sm);color:var(--error-color);margin:10px;padding:10px}.preview-error,.preview-helper{font-size:13px;text-align:center}.preview-helper{color:var(--text-light);margin-top:10px}.action-section{display:flex;justify-content:center;margin-top:20px}.generate-button{align-items:center;background:var(--primary-gradient);border:none;border-radius:var(--radius-sm);box-shadow:0 4px 12px rgba(68,131,245,.3);color:#fff;cursor:pointer;display:inline-flex;font-size:16px;font-weight:500;gap:8px;justify-content:center;padding:12px 24px;transition:var(--transition)}.generate-button:hover{box-shadow:0 6px 16px rgba(68,131,245,.4);transform:translateY(-2px)}.generate-button:active{box-shadow:0 2px 8px rgba(68,131,245,.3);transform:translateY(0)}.generate-button:disabled{cursor:not-allowed;opacity:.6;transform:none}.setting-group[style*=\"display: none\"]{display:none!important}.cf-vertical flip-card>[slot=back]{transform:scaleY(-1)}"}getTemplate(){return'\n      <div class="card-flip-generator">\n        <div class="form-grid">\n          <div class="settings-column">\n            <div class="setting-group">\n              <label for="cf-container-selector">\n                CSS-класс основного блока-контейнера <span class="required-indicator">*</span>\n              </label>\n              <input type="text" id="cf-container-selector" class="text-input" \n                     placeholder="Например: my-flip-card" required>\n              <div class="helper-text">\n                Класс, который вы присвоили основному блоку в Taptop. Без точки в начале.\n                Убедитесь, что внутри этого контейнера есть ровно два дочерних блока с классами \n                <code>flip-front</code> и <code>flip-back</code>.\n              </div>\n            </div>\n\n            <fieldset class="setting-group">\n              <legend>Триггер переворота</legend>\n              <div class="radio-group">\n                <label class="radio-container">\n                  <input type="radio" name="cf-trigger" value="click" checked>\n                  <span class="radio-checkmark"></span>\n                  Клик\n                </label>\n                <label class="radio-container">\n                  <input type="radio" name="cf-trigger" value="hover">\n                  <span class="radio-checkmark"></span>\n                  Наведение мыши\n                </label>\n              </div>\n              <div class="helper-text">\n                Как пользователь будет активировать переворот.<br>\n                <em>Наведение мыши:</em> на ПК работает от наведения курсора, \n                на мобильных (<992px) автоматически используется клик.\n              </div>\n            </fieldset>\n\n            <fieldset class="setting-group">\n              <legend>Направление переворота</legend>\n              <div class="radio-group">\n                <label class="radio-container">\n                  <input type="radio" name="cf-direction" value="horizontal" checked>\n                  <span class="radio-checkmark"></span>\n                  Горизонтально (↔)\n                </label>\n                <label class="radio-container">\n                  <input type="radio" name="cf-direction" value="vertical">\n                  <span class="radio-checkmark"></span>\n                  Вертикально (↕)\n                </label>\n              </div>\n              <div class="helper-text">Вокруг какой оси будет вращаться карточка.</div>\n            </fieldset>\n\n            <div class="setting-group">\n              <label for="cf-speed-slider">Скорость анимации</label>\n              <div class="slider-container">\n                <input type="range" id="cf-speed-slider" class="slider" \n                       min="200" max="2500" value="750" step="50">\n                <div class="slider-labels">\n                  <span>Быстро</span>\n                  <span>Медленно</span>\n                </div>\n                <div class="slider-value">\n                  <span id="cf-speed-value-display" class="slider-value-primary">750мс</span>\n                </div>\n              </div>\n              <div class="helper-text">Длительность анимации переворота (в миллисекундах).</div>\n            </div>\n\n            <div class="setting-group" id="cf-animation-style-group">\n              <label for="cf-animation-style">Стиль анимации (Горизонтальный)</label>\n              <select id="cf-animation-style" class="select-styled">\n                <option value="default" selected>Объемный 3D (с подъемом)</option>\n                <option value="flat">Плоский 2D (без подъема)</option>\n              </select>\n              <div class="helper-text">"Плоский" может помочь, если карточка выходит за рамки.</div>\n            </div>\n\n            <div class="setting-group">\n              <label for="cf-border-radius">Скругление углов (px)</label>\n              <input type="number" id="cf-border-radius" class="number-input" \n                     value="8" min="0" max="100" step="1">\n              <div class="helper-text">\n                Радиус скругления углов карточки. Указывайте такой же, как и в редакторе Taptop.\n              </div>\n            </div>\n\n            <div class="setting-group" id="cf-flip-height-group">\n              <label for="cf-flip-height">Высота подъема (0-100)</label>\n              <div class="slider-container">\n                <input type="range" id="cf-flip-height" class="slider" \n                       min="1" max="100" value="25" step="1">\n                <div class="slider-labels">\n                  <span>Мин.</span>\n                  <span>Макс.</span>\n                </div>\n                <div class="slider-value">\n                  <span id="cf-flip-height-value-display" class="slider-value-primary">25%</span>\n                </div>\n              </div>\n              <div class="helper-text">\n                Интенсивность 3D "подъема" при объемной анимации (видна только для стиля "Объемный 3D").\n              </div>\n            </div>\n          </div>\n\n          <div class="preview-section">\n            <h3 class="preview-title">Предпросмотр</h3>\n            <div id="cf-preview-area" class="preview-area" aria-live="polite">\n              <span id="cf-preview-placeholder" class="preview-placeholder">\n                Настройте параметры выше, чтобы увидеть предпросмотр.\n              </span>\n              <div id="cf-preview-error" class="preview-error" style="display: none;"></div>\n            </div>\n            <div class="preview-helper">\n              Кликните или наведите курсор (в зависимости от настроек триггера) \n              на область выше, чтобы увидеть анимацию. Внешний вид (фон, текст) \n              будет зависеть от ваших стилей в Taptop.\n            </div>\n          </div>\n        </div>\n\n        <div class="action-section">\n          <button id="generate-btn" class="generate-button">\n            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n              <path d="M16 18l6-6-6-6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n              <path d="M8 6l-6 6 6 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n            </svg>\n            <span>Сгенерировать код</span>\n          </button>\n        </div>\n      </div>\n    '}findElements(){const e=this.shadowRoot;this.elements.containerSelectorInput=e.getElementById("cf-container-selector"),this.elements.triggerRadios=e.querySelectorAll('input[name="cf-trigger"]'),this.elements.directionRadios=e.querySelectorAll('input[name="cf-direction"]'),this.elements.speedSlider=e.getElementById("cf-speed-slider"),this.elements.speedSliderGroup=this.elements.speedSlider?.closest(".setting-group"),this.elements.speedValueDisplay=e.getElementById("cf-speed-value-display"),this.elements.animationStyleSelect=e.getElementById("cf-animation-style"),this.elements.animationStyleGroup=this.elements.animationStyleSelect?.closest(".setting-group"),this.elements.borderRadiusInput=e.getElementById("cf-border-radius"),this.elements.flipHeightSlider=e.getElementById("cf-flip-height"),this.elements.flipHeightGroup=this.elements.flipHeightSlider?.closest(".setting-group"),this.elements.flipHeightValueDisplay=e.getElementById("cf-flip-height-value-display"),this.elements.previewArea=e.getElementById("cf-preview-area"),this.elements.previewPlaceholder=e.getElementById("cf-preview-placeholder"),this.elements.previewError=e.getElementById("cf-preview-error"),this.elements.generateButton=e.getElementById("generate-btn"),this._previewUpdateControls=[this.elements.speedSlider,...this.elements.triggerRadios||[],...this.elements.directionRadios||[],this.elements.animationStyleSelect,this.elements.borderRadiusInput,this.elements.flipHeightSlider].filter(e=>e)}bindEvents(){this.unbindEvents();const e=this.debounce(this._updatePreview.bind(this),250);if(this._previewUpdateControls.forEach(n=>{const t="SELECT"===n.tagName||"radio"===n.type||"range"===n.type||"number"===n.type?"change":"input",i=e;n.addEventListener(t,i),this.eventHandlers.set(n,{event:t,handler:i})}),this.elements.directionRadios.forEach(e=>{const n=this._updateConditionalUI.bind(this);e.addEventListener("change",n),this.eventHandlers.set(e,{event:"change",handler:n})}),this.elements.animationStyleSelect){const e=this._updateConditionalUI.bind(this);this.elements.animationStyleSelect.addEventListener("change",e),this.eventHandlers.set(this.elements.animationStyleSelect,{event:"change",handler:e})}if(this.elements.speedSlider){const e=this._updateSpeedSliderDisplay.bind(this);this.elements.speedSlider.addEventListener("input",e),this.eventHandlers.set(this.elements.speedSlider,{event:"input",handler:e})}if(this.elements.flipHeightSlider){const e=this._updateHeightSliderDisplay.bind(this);this.elements.flipHeightSlider.addEventListener("input",e),this.eventHandlers.set(this.elements.flipHeightSlider,{event:"input",handler:e})}if(this.elements.generateButton){const e=this.generateAndCopyCode.bind(this);this.elements.generateButton.addEventListener("click",e),this.eventHandlers.set(this.elements.generateButton,{event:"click",handler:e})}}unbindEvents(){this.eventHandlers.forEach((e,n)=>{n&&e.handler&&n.removeEventListener(e.event,e.handler)}),this.eventHandlers.clear()}setInitialState(){this.elements.speedSlider&&(this.elements.speedSlider.value=750),this.elements.borderRadiusInput&&(this.elements.borderRadiusInput.value=8),this.elements.flipHeightSlider&&(this.elements.flipHeightSlider.value=25),this.elements.animationStyleSelect&&(this.elements.animationStyleSelect.value="default"),this._updateSpeedSliderDisplay(),this._updateHeightSliderDisplay(),this._updateConditionalUI(),this._updatePreview()}debounce(e,n=250){let t;const i=(...i)=>{clearTimeout(t),t=setTimeout(()=>e.apply(this,i),n)};return i.cancel=()=>clearTimeout(t),i}_updateConditionalUI(){const e=this.shadowRoot.querySelector('input[name="cf-direction"]:checked')?.value,n=this.elements.animationStyleSelect?.value,t="horizontal"===e&&"default"===n;this.elements.animationStyleGroup&&(this.elements.animationStyleGroup.style.display="horizontal"===e?"":"none"),this.elements.flipHeightGroup&&(this.elements.flipHeightGroup.style.display=t?"":"none"),this._updatePreview()}_updateSpeedSliderDisplay(){this.elements.speedSlider&&this.elements.speedValueDisplay&&(this.elements.speedValueDisplay.textContent=`${this.elements.speedSlider.value}мс`)}_updateHeightSliderDisplay(){this.elements.flipHeightSlider&&this.elements.flipHeightValueDisplay&&(this.elements.flipHeightValueDisplay.textContent=`${this.elements.flipHeightSlider.value}%`)}_updatePreview(){const{previewArea:e,previewPlaceholder:n,previewError:t}=this.elements;if(!e)return;if(!window.customElements.get("flip-card")){n&&(n.textContent="Загрузка компонента...");const e=document.createElement("script");return e.type="module",e.src="https://unpkg.com/@auroratide/flip-card/lib/define.js",e.onload=()=>{window.customElements.whenDefined("flip-card").then(()=>this._updatePreview()).catch(()=>{t&&(t.style.display="block",t.textContent="Не удалось загрузить компонент для превью.")})},void document.head.appendChild(e)}n&&(n.style.display="none"),t&&(t.style.display="none");const i=this.shadowRoot.querySelector('input[name="cf-trigger"]:checked')?.value||"click",r=this.shadowRoot.querySelector('input[name="cf-direction"]:checked')?.value||"horizontal",a=parseInt(this.elements.speedSlider?.value,10)||750,o=this.elements.animationStyleSelect?.value||"default",s=parseInt(this.elements.borderRadiusInput?.value,10),l=(parseInt(this.elements.flipHeightSlider?.value,10)||25)/100*40;this.elements.previewArea&&(this.elements.previewArea.style.overflow="visible"),this.previewFlipCard&&e.contains(this.previewFlipCard)&&(this._removePreviewTrigger(),this.previewFlipCard.remove()),this.previewFlipCard=document.createElement("flip-card");const d=document.createElement("section");d.slot="front";const c=document.createElement("section");c.slot="back",this.previewFlipCard.append(d,c),this.previewFlipCard.style.setProperty("--flip-duration",`${a}ms`),this.previewFlipCard.style.borderRadius=`${isNaN(s)?8:s}px`,this.previewFlipCard.style.setProperty("--flip-height",`${l}em`),this.previewFlipCard.style.setProperty("--corner-granularity","8"),e.appendChild(this.previewFlipCard),this.previewTriggerElement=this.previewFlipCard;const p=this.previewFlipCard.querySelector('[slot="back"]');if("vertical"===r){p&&(p.style.transform="scaleY(-1)");const e=[{transform:"rotateX(0deg)"},{transform:"rotateX(90deg)"},{transform:"rotateX(180deg)"}],n={easing:"ease-in-out"};this.previewFlipCard.setFlipToFrontAnimation([{transform:"rotateX(180deg)"},{transform:"rotateX(270deg)"},{transform:"rotateX(360deg)"}],n),this.previewFlipCard.setFlipToBackAnimation(e,n)}else if("horizontal"===r&&"flat"===o){p&&(p.style.transform="");const e=[{transform:"rotateY(0deg)"},{transform:"rotateY(90deg)"},{transform:"rotateY(180deg)"}],n={easing:"ease-in-out"};this.previewFlipCard.setFlipToFrontAnimation([{transform:"rotateY(180deg)"},{transform:"rotateY(270deg)"},{transform:"rotateY(360deg)"}],n),this.previewFlipCard.setFlipToBackAnimation(e,n)}else p&&(p.style.transform="");this._bindPreviewTrigger(i),this.previewFlipCard.setAttribute("tabindex","0")}_bindPreviewTrigger(e){if(!this.previewTriggerElement||!this.previewFlipCard)return;this._removePreviewTrigger();const n=this.previewFlipCard;if("hover"===e){let e=!1,t=!1;const i=()=>{t=!1,!e&&n.hasAttribute("facedown")&&n.flip()};n.addEventListener("flipping",()=>{t=!0}),n.addEventListener("flipped",i),this._previewHoverEnter=()=>{e=!0,t||n.hasAttribute("facedown")||n.flip()},this._previewHoverLeave=()=>{e=!1,!t&&n.hasAttribute("facedown")&&n.flip()},this.previewTriggerElement.addEventListener("mouseenter",this._previewHoverEnter),this.previewTriggerElement.addEventListener("mouseleave",this._previewHoverLeave),this._previewKeydownAction=e=>{"Enter"!==e.key&&" "!==e.key||(e.preventDefault(),t||n.flip())},this.previewTriggerElement.addEventListener("keydown",this._previewKeydownAction)}else{let e=!1;this._previewClickAction=()=>{e||(e=!0,n.flip())},n.addEventListener("flipped",()=>{e=!1}),this.previewTriggerElement.addEventListener("click",this._previewClickAction),this._previewKeydownAction=t=>{"Enter"!==t.key&&" "!==t.key||(t.preventDefault(),e||(e=!0,n.flip()))},this.previewTriggerElement.addEventListener("keydown",this._previewKeydownAction)}}_removePreviewTrigger(){this.previewTriggerElement&&this.previewFlipCard&&(this._previewClickAction&&this.previewTriggerElement.removeEventListener("click",this._previewClickAction),this._previewHoverEnter&&this.previewTriggerElement.removeEventListener("mouseenter",this._previewHoverEnter),this._previewHoverLeave&&this.previewTriggerElement.removeEventListener("mouseleave",this._previewHoverLeave),this._previewKeydownAction&&this.previewTriggerElement.removeEventListener("keydown",this._previewKeydownAction),this._previewClickAction=null,this._previewHoverEnter=null,this._previewHoverLeave=null,this._previewKeydownAction=null)}collectData(){const e=this.elements.containerSelectorInput?.value.trim().replace(/^\./,""),n=this.shadowRoot.querySelector('input[name="cf-trigger"]:checked')?.value||"click",t=this.shadowRoot.querySelector('input[name="cf-direction"]:checked')?.value||"horizontal",i=parseInt(this.elements.speedSlider?.value,10)||750,r="horizontal"===t&&this.elements.animationStyleSelect?.value||"default",a=parseInt(this.elements.borderRadiusInput?.value,10),o=parseInt(this.elements.flipHeightSlider?.value,10)||25;if(!e)return this.showErrorPopup("Укажите CSS‑класс основного блока‑контейнера."),null;if(!/^[a-zA-Z0-9_-]+$/.test(e))return this.showErrorPopup(`Класс "${e}" содержит недопустимые символы.`),null;const s=(e,n,t,i)=>{const r=parseInt(e,10);return isNaN(r)||r<n||r>t?i:r};return{containerSelector:e,trigger:n,direction:t,duration:s(i,100,5e3,750),animationStyle:r,borderRadius:s(a,0,1e3,8),flipHeightPercent:s(o,0,100,50)}}generateCode(e){if(!e)return console.error("CardFlipGenerator: Ошибка - нет настроек для генерации кода."),"";const n=JSON.stringify(e,null,2),t=e.containerSelector;let i=[],r=[];return null!=e.borderRadius&&e.borderRadius>=0&&(r.push(`border-radius: ${e.borderRadius}px`),r.push("-webkit-transform-style: preserve-3d"),r.push("transform-style: preserve-3d")),i.push(e.showBackInitially?`\n.${t} > .flip-front { display: none !important; }\n.${t} > .flip-back { display: block !important; }\n      `:`\n.${t} > .flip-back { display: none !important; }\n.${t} > .flip-front { display: block !important; }\n      `),r.length>0&&i.push(`.${e.containerSelector} {\n  ${r.join(";\n  ")};\n}`),i.push(`\n.${t}:not([data-taptop-flip-card-initialized="true"]) {\n    overflow: hidden;\n}\n    `),i.push(`\n.${t}.cf-vertical flip-card > [slot="back"] { \n    transform: scale(-1);\n}\n    `),`<style>\n${i.join("\n").trim()}\n</style>\n<script type="module">\n\nconst debounce = (fn, wait = 250) => {\n  let t;\n  const wrapped = (...args) => {\n    clearTimeout(t);\n    t = setTimeout(() => fn.apply(null, args), wait);\n  };\n  wrapped.cancel = () => clearTimeout(t);\n  return wrapped;\n};\n\nfunction loadFlipCardLibrary(cdnUrl, callback) {\n    const scriptId = 'auroratide-flip-card-script';\n\n    if (document.getElementById(scriptId) || window.customElements.get('flip-card')) {\n        if (window.customElements.get('flip-card')) {\n            console.log('[FlipCard Loader] Компонент уже зарегистрирован.');\n            requestAnimationFrame(callback);\n        } else {\n            console.log('[FlipCard Loader] Скрипт загружается, ожидание регистрации...');\n            window.customElements.whenDefined('flip-card')\n                .then(() => requestAnimationFrame(callback))\n                .catch(err => console.error('[FlipCard Loader] Ошибка ожидания регистрации:', err));\n        }\n        return;\n    }\n\n    console.log('[FlipCard Loader] Загрузка библиотеки с:', cdnUrl);\n    const script = document.createElement('script');\n    script.id = scriptId;\n    script.type = 'module';\n    script.src = cdnUrl;\n    script.onload = () => {\n        console.log('[FlipCard Loader] Скрипт загружен, ожидание регистрации...');\n         window.customElements.whenDefined('flip-card')\n             .then(() => {\n                 console.log('[FlipCard Loader] Компонент зарегистрирован после загрузки.');\n                 requestAnimationFrame(callback);\n             })\n            .catch(err => console.error('[FlipCard Loader] Ошибка ожидания регистрации после загрузки:', err));\n    };\n    script.onerror = () => console.error('[FlipCard Loader] Ошибка загрузки скрипта библиотеки:', cdnUrl);\n    document.head.appendChild(script);\n}\n\nfunction _createFlipCardElement(config) {\n    const flipCardElement = document.createElement('flip-card');\n    flipCardElement.style.setProperty('--flip-duration', \`\${config.duration || 750}ms\`);\n    if (config.showBackInitially) {\n        flipCardElement.setAttribute('facedown', '');\n    }\n    if (config.borderRadius != null) flipCardElement.style.borderRadius = config.borderRadius + 'px';\n    return flipCardElement;\n}\n\nfunction _assignSlotsAndAppend(frontEl, backEl, flipCardElement) {\n    if (frontEl) {\n        frontEl.setAttribute('slot', 'front');\n        flipCardElement.appendChild(frontEl);\n         console.log('[FlipCard Slot] Назначен slot="front" существующему .flip-front и добавлен в flip-card.');\n    } else {\n        console.error('[FlipCard Slot] Оригинальный элемент .flip-front не найден!');\n    }\n\n    if (backEl) {\n        backEl.setAttribute('slot', 'back');\n        flipCardElement.appendChild(backEl);\n        console.log('[FlipCard Slot] Назначен slot="back" существующему .flip-back и добавлен в flip-card.');\n    } else {\n        console.error('[FlipCard Slot] Оригинальный элемент .flip-back не найден!');\n    }\n}\n\nfunction initFlipCards(config) {\n    try {\n       const containers = document.querySelectorAll('.' + config.containerSelector);\n\n       if (containers.length === 0) {\n           console.warn(\`[FlipCard Init] Не найдено ни одного контейнера с классом '\${config.containerSelector}'. Убедитесь, что класс указан верно и элементы существуют на странице.\`);\n           return;\n       }\n       console.log(\`[FlipCard Init] Найдено контейнеров для инициализации: \${containers.length}\`);\n\n    containers.forEach((container, index) => {\n        const instanceId = \`\${config.containerSelector}-\${index}\`;\n        if (container.dataset.taptopFlipCardInitialized === 'true') {\n            console.warn(\`[FlipCard Init] \${instanceId}: Контейнер уже инициализирован. Пропускаем.\`);\n            return;\n        }\n        const frontEl = container.querySelector('.flip-front');\n        const backEl = container.querySelector('.flip-back');\n        if (!frontEl) {\n            console.error(\`[FlipCard Init] \${instanceId}: Не найден элемент '.flip-front'. Пропускаем.\`);\n            return;\n        }\n        if (!backEl) {\n            console.error(\`[FlipCard Init] \${instanceId}: Не найден элемент '.flip-back'. Пропускаем.\`);\n            return;\n        }\n         console.log(\`[FlipCard Init] \${instanceId}: Найдены .flip-front и .flip-back.\`);\n\n        const flipCardElement = _createFlipCardElement(config);\n        _assignSlotsAndAppend(frontEl, backEl, flipCardElement);\n        container.appendChild(flipCardElement);\n        if (config.borderRadius != null && config.borderRadius >= 0) {\n           flipCardElement.style.borderRadius = config.borderRadius + 'px';\n        }\n        console.log(\`[FlipCard Init] \${instanceId}: <flip-card> создан и добавлен.\`);\n\n        let currentTrigger = config.trigger;\n        const hybridBreakpoint = 992;\n\n        function attachEventListeners() {\n    const oldListeners = container.__taptopFlipListeners || {};\n    if (oldListeners.click) container.removeEventListener('click', oldListeners.click);\n    if (oldListeners.keydown) container.removeEventListener('keydown', oldListeners.keydown);\n    if (oldListeners.mouseenter) container.removeEventListener('mouseenter', oldListeners.mouseenter);\n    if (oldListeners.mouseleave) container.removeEventListener('mouseleave', oldListeners.mouseleave);\n    if (oldListeners.focus) container.removeEventListener('focus', oldListeners.focus);\n    if (oldListeners.blur) container.removeEventListener('blur', oldListeners.blur);\n    \n    const cardElement = container.querySelector('flip-card');\n    if (cardElement && cardElement.__flippingListener) {\n        cardElement.removeEventListener('flipping', cardElement.__flippingListener);\n    }\n    if (cardElement && cardElement.__flippedListener) {\n        cardElement.removeEventListener('flipped', cardElement.__flippedListener);\n    }\n    container.__taptopFlipListeners = {};\n\n    if (currentTrigger === 'click') {\n        let isClickFlipping = false;\n        const clickHandler = () => {\n            if (isClickFlipping || !cardElement || typeof cardElement.flip !== 'function') return;\n            isClickFlipping = true;\n            cardElement.flip();\n        };\n        const keydownHandler = (event) => {\n            if (event.key === 'Enter' || event.key === ' ') {\n                event.preventDefault();\n                if (isClickFlipping || !cardElement || typeof cardElement.flip !== 'function') return;\n                isClickFlipping = true;\n                cardElement.flip();\n            }\n        };\n        container.addEventListener('click', clickHandler);\n        container.addEventListener('keydown', keydownHandler);\n        container.__taptopFlipListeners = { click: clickHandler, keydown: keydownHandler };\n\n        if (cardElement) {\n            const clickFlippingListener = () => { };\n            const clickFlippedListener = (e) => {\n                isClickFlipping = false;\n                container.setAttribute('aria-pressed', e.detail.facedown ? 'true' : 'false');\n            };\n            cardElement.addEventListener('flipping', clickFlippingListener);\n            cardElement.addEventListener('flipped', clickFlippedListener);\n            cardElement.__flippingListener = clickFlippingListener;\n            cardElement.__flippedListener = clickFlippedListener;\n        }\n\n    } else if (currentTrigger === 'hover') {\n        console.log(\`[FlipCard Trigger] \${instanceId}: Hover Logic Active (Smart Hover/Click)\`);\n        if (!cardElement || typeof cardElement.flip !== 'function') {\n            console.warn(\`[FlipCard Trigger] \${instanceId}: <flip-card> element not found or .flip not a function.\`);\n            return;\n        }\n\n        let intentToFlipToBack = false;\n        let isAnimatingByComponent = false;\n\n        const flippingListener = (e) => {\n            isAnimatingByComponent = true;\n            container.setAttribute('aria-pressed', e.detail.facedown ? 'true' : 'false');\n        };\n        const flippedListener = (e) => {\n            isAnimatingByComponent = false;\n            container.setAttribute('aria-pressed', e.detail.facedown ? 'true' : 'false');\n            if (!intentToFlipToBack && cardElement.hasAttribute('facedown')) {\n                cardElement.flip();\n            }\n        };\n\n        cardElement.addEventListener('flipping', flippingListener);\n        cardElement.addEventListener('flipped', flippedListener);\n        cardElement.__flippingListener = flippingListener;\n        cardElement.__flippedListener = flippedListener;\n\n        const mouseEnterHandler = () => {\n            intentToFlipToBack = true;\n            if (isAnimatingByComponent) {\n                return; \n            }\n            if (!cardElement.hasAttribute('facedown')) {\n                cardElement.flip();\n            }\n        };\n\n        const mouseLeaveHandler = () => {\n            intentToFlipToBack = false;\n            if (isAnimatingByComponent) {\n                return; \n            }\n            if (cardElement.hasAttribute('facedown')) {\n                cardElement.flip();\n            }\n        };\n        \n        const focusHandler = () => container.classList.add('hover-active');\n        const blurHandler = () => container.classList.remove('hover-active');\n        \n        const keydownHandler = (event) => {\n            if (event.key === 'Enter' || event.key === ' ') {\n                event.preventDefault();\n                if (isAnimatingByComponent && config.trigger === 'hover') {\n                    return;\n                }\n                cardElement.flip();\n            }\n        };\n\n        container.addEventListener('mouseenter', mouseEnterHandler);\n        container.addEventListener('mouseleave', mouseLeaveHandler);\n        container.addEventListener('focus', focusHandler);\n        container.addEventListener('blur', blurHandler);\n        container.addEventListener('keydown', keydownHandler);\n        \n        container.__taptopFlipListeners = {\n            mouseenter: mouseEnterHandler, mouseleave: mouseLeaveHandler,\n            focus: focusHandler, blur: blurHandler, keydown: keydownHandler,\n            componentFlipping: flippingListener, \n            componentFlipped: flippedListener\n        };\n    }\n}\n\n        const updateTriggerBasedOnScreen = () => {\n            const newTriggerBasedOnWidth = window.innerWidth < hybridBreakpoint ? 'click' : 'hover';\n            if (newTriggerBasedOnWidth !== currentTrigger) {\n                currentTrigger = newTriggerBasedOnWidth;\n                console.log(\`[FlipCard Trigger Update] \${instanceId}: Mode switched to \${currentTrigger}. Re-attaching listeners.\`);\n                attachEventListeners();\n            }\n        };\n        if (config.trigger === 'hover') {\n            container.classList.remove('cf-horizontal', 'cf-vertical');\n            currentTrigger = window.innerWidth < hybridBreakpoint ? 'click' : 'hover';\n            console.log(\`[FlipCard Init] \${instanceId}: Initial trigger mode for hover config: \${currentTrigger}.\`);\n            attachEventListeners();\n            if (container.__taptopResizeListener) {\n                window.removeEventListener('resize', container.__taptopResizeListener);\n            }\n            container.__taptopResizeListener = debounce(updateTriggerBasedOnScreen, 200);\n            window.addEventListener('resize', container.__taptopResizeListener);\n        } else {\n            container.classList.remove('cf-horizontal', 'cf-vertical');\n            currentTrigger = 'click';\n            attachEventListeners();\n        }\n\n        const backSlotInGeneratedCard = flipCardElement.querySelector('[slot="back"]');\n\n        if (config.direction === 'vertical' && flipCardElement.setFlipToFrontAnimation) {\n             container.classList.add('cf-vertical');\n             _applyVerticalAnimation(flipCardElement);\n             console.log(\`[FlipCard Init] \${instanceId}: Установлена вертикальная анимация.\`);\n        } else if (config.direction === 'horizontal' && config.animationStyle === 'flat' && flipCardElement.setFlipToFrontAnimation) {\n             container.classList.add('cf-horizontal');\n             const kfFront = [ { transform: "rotateY(180deg)" }, { transform: "rotateY(270deg)" }, { transform: "rotateY(360deg)" } ];\n             const kfBack = [ { transform: "rotateY(0deg)" }, { transform: "rotateY(90deg)" }, { transform: "rotateY(180deg)" } ];\n             const opts = { easing: "ease-in-out" };\n             flipCardElement.setFlipToFrontAnimation(kfFront, opts);\n             flipCardElement.setFlipToBackAnimation(kfBack, opts);\n             console.log(\`[FlipCard Init] \${instanceId}: Установлена плоская горизонтальная анимация.\`);\n        } else {\n             container.classList.add('cf-horizontal');\n             _resetToHorizontalAnimation(flipCardElement);\n             console.log(\`[FlipCard Init] \${instanceId}: Используется стандартная горизонтальная анимация.\`);\n        }\n\n        if (config.borderRadius != null && config.borderRadius >= 0) {\n           flipCardElement.style.borderRadius = config.borderRadius + 'px';\n        }\n        const flipHeightEm = ((config.flipHeightPercent != null ? config.flipHeightPercent : 50) / 100) * 40;\n        flipCardElement.style.setProperty('--flip-height', \`\${flipHeightEm}em\`);\n        flipCardElement.style.setProperty('--corner-granularity', '8');\n\n         container.setAttribute('tabindex', '0');\n         if (config.trigger === 'hover') {\n             container.style.cursor = 'default'; \n         } else {\n             container.style.cursor = 'pointer';\n         }\n        container.setAttribute('role', 'button');\n        container.setAttribute('aria-pressed', flipCardElement.hasAttribute('facedown') ? 'true' : 'false');\n        container.setAttribute('aria-label', 'Перевернуть карточку');\n\n        container.dataset.taptopFlipCardInitialized = 'true';\n        console.log(\`[FlipCard Init] \${instanceId}: Инициализация завершена.\`);\n    });\n   } catch (e) {\n        console.error(\`[FlipCard Init] Ошибка при поиске или инициализации контейнеров ('\${config.containerSelector}'):\`, e);\n   }\n}\n\nfunction _applyVerticalAnimation(flipCardElement) {\n     if (!flipCardElement?.setFlipToFrontAnimation) return;\n     const vKF = [{ transform: "rotateX(180deg)" },{ transform: "rotateX(270deg)" },{ transform: "rotateX(360deg)" }];\n     const vKB = [{ transform: "rotateX(0deg)" },{ transform: "rotateX(90deg)" },{ transform: "rotateX(180deg)" }];\n     const opts = { easing: "ease-in-out" };\n     flipCardElement.setFlipToFrontAnimation(vKF, opts);\n     flipCardElement.setFlipToBackAnimation(vKB, opts);\n}\n\nfunction _resetToHorizontalAnimation(flipCardElement) {\n    \n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n     loadFlipCardLibrary('https://unpkg.com/@auroratide/flip-card/lib/define.js', () => {\n        const currentConfig = ${n};\n        initFlipCards(currentConfig);\n    });\n});\n    \n<\/script>\n`}async minifyGeneratedCode(e){try{const n=this.parseGeneratedCode(e),t=n.css?this.minifyCSS(n.css):"",i=n.js?this.minifyJS(n.js):"",r=n.html?this.minifyHTML(n.html):"";let a="";return r&&(a+=r),t&&(a+=`<style>${t}</style>`),i&&(a+=`<script type="module">${i}<\/script>`),a}catch(n){return console.warn("Минификация генерируемого кода не удалась, используем оригинал:",n),e}}parseGeneratedCode(e){const n={css:"",js:"",html:""},t=/<style[^>]*>([\s\S]*?)<\/style>/gi;let i;for(;null!==(i=t.exec(e));)n.css+=i[1];const r=/<script[^>]*>([\s\S]*?)<\/script>/gi;for(;null!==(i=r.exec(e));)n.js+=i[1];return n.html=e.replace(/<style[^>]*>[\s\S]*?<\/style>/gi,"").replace(/<script[^>]*>[\s\S]*?<\/script>/gi,"").trim(),n}minifyCSS(e){return e.replace(/\/\*[\s\S]*?\*\//g,"").replace(/\s+/g," ").replace(/\s*([{}:;,>+~])\s*/g,"$1").replace(/;}/g,"}").replace(/\s*\(\s*/g,"(").replace(/\s*\)\s*/g,")").replace(/#([a-f0-9])\1([a-f0-9])\2([a-f0-9])\3/gi,"#$1$2$3").trim()}minifyHTML(e){return e?e.replace(/<!--[\s\S]*?-->/g,"").replace(/>\s+</g,"><").replace(/\s+/g," ").trim():""}minifyJS(e){let n=e;return n=this.removeJSComments(n),n=n.replace(/const\s+([a-zA-Z_$][a-zA-Z0-9_$]*)\s*=\s*/g,"const $1=").replace(/let\s+([a-zA-Z_$][a-zA-Z0-9_$]*)\s*=\s*/g,"let $1=").replace(/var\s+([a-zA-Z_$][a-zA-Z0-9_$]*)\s*=\s*/g,"var $1="),n=n.replace(/{\s*([^}]+)\s*}/g,(e,n)=>`{${n.replace(/\s*:\s*/g,":").replace(/\s*,\s*/g,",")}}`).replace(/\[\s*([^\]]+)\s*\]/g,(e,n)=>`[${n.replace(/\s*,\s*/g,",")}]`),n=n.replace(/\s*([=+\-*/%<>&|!])\s*/g,"$1").replace(/\s*([(){}[\];,])\s*/g,"$1").replace(/\s+/g," ").replace(/\b(if|for|while|switch|catch|function|return|throw|new|typeof)\s+/g,"$1 ").replace(/\belse\s+/g,"else ").replace(/\s*\n\s*/g,"\n").replace(/\n+/g,"\n").trim(),n=n.replace(/\btrue\b(?=\s*[,;\}\)\]])/g,"!0").replace(/\bfalse\b(?=\s*[,;\}\)\]])/g,"!1").replace(/\bundefined\b(?=\s*[,;\}\)\]])/g,"void 0"),n}removeJSComments(e){let n="",t=!1,i="",r=!1,a=!1;for(let o=0;o<e.length;o++){const s=e[o],l=e[o+1]||"";if(!r&&!a){if(!(t||'"'!==s&&"'"!==s&&"`"!==s)){t=!0,i=s,n+=s;continue}if(t&&s===i&&"\\"!==e[o-1]){t=!1,n+=s;continue}if(t){n+=s;continue}}if(!t){if(!r&&!a&&"/"===s&&"*"===l){r=!0,o++;continue}if(r&&"*"===s&&"/"===l){r=!1,o++;continue}if(!r&&!a&&"/"===s&&"/"===l){a=!0,o++;continue}if(a&&("\n"===s||"\r"===s)){a=!1,n+=s;continue}}r||a||(n+=s)}return n}async generateAndCopyCode(){const e=this.collectData();if(null===e)return;const n=this.generateCode(e),t=await this.minifyGeneratedCode(n);this.copyToClipboard(t)}copyToClipboard(e){navigator.clipboard?navigator.clipboard.writeText(e).then(()=>{this.showSuccessPopup()}).catch(()=>{this.fallbackCopyToClipboard(e)}):this.fallbackCopyToClipboard(e)}fallbackCopyToClipboard(e){const n=document.createElement("textarea");n.value=e,n.style.position="fixed",n.style.left="-999999px",n.style.top="-999999px",document.body.appendChild(n),n.focus(),n.select();try{document.execCommand("copy"),this.showSuccessPopup()}catch(e){console.error("Ошибка копирования:",e)}finally{document.body.removeChild(n)}}showSuccessPopup(){const e=document.querySelector("#success-modal");e&&(e.style.display="block")}showErrorPopup(e){alert(e)}destroy(){this.unbindEvents(),this._removePreviewTrigger(),this.initialized=!1}}customElements.define("card-flip-generator",CardFlipGenerator);